{
    "prompt": "We are solving problems in PDDL format. Based on the PDDL domain, what will be the states after each action? Generate your answer without explanation and in txt format like this: \nabove(f0, f1)\nabove(f0, f2)\nabove(f0, f3)",

    
    "pddl_domain": {
        "domain_name": "barman",
        "requirements": [":strips", ":typing", ":action-costs"],
        "types": {
        "hand": "object",
        "level": "object",
        "beverage": "object",
        "dispenser": "object",
        "container": "object",
        "ingredient": "beverage",
        "cocktail": "beverage",
        "shot": "container",
        "shaker": "container"
        },
        "predicates": {
        "ontable": {
            "parameters": ["?c - container"],
            "description": "The container ?c is on the table."
        },
        "holding": {
            "parameters": ["?h - hand", "?c - container"],
            "description": "?h is holding container ?c."
        },
        "handempty": {
            "parameters": ["?h - hand"],
            "description": "Hand ?h is empty."
        },
        "empty": {
            "parameters": ["?c - container"],
            "description": "Container ?c is empty."
        },
        "contains": {
            "parameters": ["?c - container", "?b - beverage"],
            "description": "Container ?c contains beverage ?b."
        },
        "clean": {
            "parameters": ["?c - container"],
            "description": "Container ?c is clean."
        },
        "used": {
            "parameters": ["?c - container", "?b - beverage"],
            "description": "Container ?c has used beverage ?b."
        },
        "dispenses": {
            "parameters": ["?d - dispenser", "?i - ingredient"],
            "description": "Dispenser ?d dispenses ingredient ?i."
        },
        "shaker-empty-level": {
            "parameters": ["?s - shaker", "?l - level"],
            "description": "Shaker ?s is empty at level ?l."
        },
        "shaker-level": {
            "parameters": ["?s - shaker", "?l - level"],
            "description": "Shaker ?s has level ?l."
        },
        "next": {
            "parameters": ["?l1 - level", "?l2 - level"],
            "description": "Level ?l1 is followed by level ?l2."
        },
        "unshaked": {
            "parameters": ["?s - shaker"],
            "description": "Shaker ?s is unshaken."
        },
        "shaked": {
            "parameters": ["?s - shaker"],
            "description": "Shaker ?s has been shaken."
        },
        "cocktail-part1": {
            "parameters": ["?c - cocktail", "?i - ingredient"],
            "description": "Cocktail ?c has ingredient ?i as part 1."
        },
        "cocktail-part2": {
            "parameters": ["?c - cocktail", "?i - ingredient"],
            "description": "Cocktail ?c has ingredient ?i as part 2."
        }
        },
        "functions": {
        "total-cost": {
            "type": "number",
            "description": "The total cost of actions performed."
        }
        },
        "actions": [
        {
            "name": "grasp",
            "parameters": ["?h - hand", "?c - container"],
            "precondition": [
            "(ontable ?c)",
            "(handempty ?h)"
            ],
            "effect": [
            "(not (ontable ?c))",
            "(not (handempty ?h))",
            "(holding ?h ?c)",
            "(increase (total-cost) 1)"
            ]
        },
        {
            "name": "leave",
            "parameters": ["?h - hand", "?c - container"],
            "precondition": [
            "(holding ?h ?c)"
            ],
            "effect": [
            "(not (holding ?h ?c))",
            "(handempty ?h)",
            "(ontable ?c)",
            "(increase (total-cost) 1)"
            ]
        },
        {
            "name": "fill-shot",
            "parameters": ["?s - shot", "?i - ingredient", "?h1 ?h2 - hand", "?d - dispenser"],
            "precondition": [
            "(holding ?h1 ?s)",
            "(handempty ?h2)",
            "(dispenses ?d ?i)",
            "(empty ?s)",
            "(clean ?s)"
            ],
            "effect": [
            "(not (empty ?s))",
            "(contains ?s ?i)",
            "(not (clean ?s))",
            "(used ?s ?i)",
            "(increase (total-cost) 10)"
            ]
        },
        {
            "name": "refill-shot",
            "parameters": ["?s - shot", "?i - ingredient", "?h1 ?h2 - hand", "?d - dispenser"],
            "precondition": [
            "(holding ?h1 ?s)",
            "(handempty ?h2)",
            "(dispenses ?d ?i)",
            "(empty ?s)",
            "(used ?s ?i)"
            ],
            "effect": [
            "(not (empty ?s))",
            "(contains ?s ?i)",
            "(increase (total-cost) 10)"
            ]
        },
        {
            "name": "empty-shot",
            "parameters": ["?h - hand", "?p - shot", "?b - beverage"],
            "precondition": [
            "(holding ?h ?p)",
            "(contains ?p ?b)"
            ],
            "effect": [
            "(not (contains ?p ?b))",
            "(empty ?p)",
            "(increase (total-cost) 1)"
            ]
        },
        {
            "name": "clean-shot",
            "parameters": ["?s - shot", "?b - beverage", "?h1 ?h2 - hand"],
            "precondition": [
            "(holding ?h1 ?s)",
            "(handempty ?h2)",
            "(empty ?s)",
            "(used ?s ?b)"
            ],
            "effect": [
            "(not (used ?s ?b))",
            "(clean ?s)",
            "(increase (total-cost) 1)"
            ]
        },
        {
            "name": "pour-shot-to-clean-shaker",
            "parameters": ["?s - shot", "?i - ingredient", "?d - shaker", "?h1 - hand", "?l ?l1 - level"],
            "precondition": [
            "(holding ?h1 ?s)",
            "(contains ?s ?i)",
            "(empty ?d)",
            "(clean ?d)",
            "(shaker-level ?d ?l)",
            "(next ?l ?l1)"
            ],
            "effect": [
            "(not (contains ?s ?i))",
            "(empty ?s)",
            "(contains ?d ?i)",
            "(not (empty ?d))",
            "(not (clean ?d))",
            "(unshaked ?d)",
            "(not (shaker-level ?d ?l))",
            "(shaker-level ?d ?l1)",
            "(increase (total-cost) 1)"
            ]
        },
        {
            "name": "pour-shot-to-used-shaker",
            "parameters": ["?s - shot", "?i - ingredient", "?d - shaker", "?h1 - hand", "?l ?l1 - level"],
            "precondition": [
            "(holding ?h1 ?s)",
            "(contains ?s ?i)",
            "(unshaked ?d)",
            "(shaker-level ?d ?l)",
            "(next ?l ?l1)"
            ],
            "effect": [
            "(not (contains ?s ?i))",
            "(contains ?d ?i)",
            "(empty ?s)",
            "(not (shaker-level ?d ?l))",
            "(shaker-level ?d ?l1)",
            "(increase (total-cost) 1)"
            ]
        },
        {
            "name": "empty-shaker",
            "parameters": ["?h - hand", "?s - shaker", "?b - cocktail", "?l ?l1 - level"],
            "precondition": [
            "(holding ?h ?s)",
            "(contains ?s ?b)",
            "(shaked ?s)",
            "(shaker-level ?s ?l)",
            "(shaker-empty-level ?s ?l1)"
            ],
            "effect": [
            "(not (shaked ?s))",
            "(not (shaker-level ?s ?l))",
            "(shaker-level ?s ?l1)",
            "(not (contains ?s ?b))",
            "(empty ?s)",
            "(increase (total-cost) 1)"
            ]
        },
        {
            "name": "clean-shaker",
            "parameters": ["?h1 ?h2 - hand", "?s - shaker"],
            "precondition": [
            "(holding ?h1 ?s)",
            "(handempty ?h2)",
            "(empty ?s)"
            ],
            "effect": [
            "(clean ?s)",
            "(increase (total-cost) 1)"
            ]
        },
        {
            "name": "shake",
            "parameters": ["?b - cocktail", "?d1 ?d2 - ingredient", "?s - shaker", "?h1 ?h2 - hand"],
            "precondition": [
            "(holding ?h1 ?s)",
            "(handempty ?h2)",
            "(contains ?s ?d1)",
            "(contains ?s ?d2)",
            "(shaked ?s)",
            "(contains ?s ?b)",
			"(increase (total-cost) 1)))"
            ],
            "effect": [
                "(not (empty ?d))",
                "(contains ?d ?b)",
                "(shaker-level ?s ?l1)",
                "(not (shaker-level ?s ?l))",
                "(increase (total-cost) 1)))"
            ]
        },
        {
            "name": "pour-shaker-to-shot",
            "parameters": ["?b - beverage", "?d - shot", "?h - hand", "?s - shaker", "?l", "?l1 - level"],
            "precondition":[
                "(holding ?h ?s)",
                "(shaked ?s)",
                "(empty ?d)",
                "(clean ?d)",
                "(contains ?s ?b)",
                "(shaker-level ?s ?l)",
                "(next ?l1 ?l))"
            ],
            "effect":[
                "(not (clean ?d))",
                "(not (empty ?d))",
                "(contains ?d ?b)",
                "(shaker-level ?s ?l1)",
                "(not (shaker-level ?s ?l))",
                "(increase (total-cost) 1)))"
            ]
        }
        ]
    },

    "initial_state": [
        "clean(shaker1)",
        "clean(shot1)",
        "clean(shot2)",
        "clean(shot3)",
        "clean(shot4)",
        "cocktail-part1(cocktail1, ingredient3)",
        "cocktail-part1(cocktail2, ingredient2)",
        "cocktail-part1(cocktail3, ingredient1)",
        "cocktail-part2(cocktail1, ingredient1)",
        "cocktail-part2(cocktail2, ingredient3)",
        "cocktail-part2(cocktail3, ingredient2)",
        "dispenses(dispenser1, ingredient1)",
        "dispenses(dispenser2, ingredient2)",
        "dispenses(dispenser3, ingredient3)",
        "empty(shaker1)",
        "empty(shot1)",
        "empty(shot2)",
        "empty(shot3)",
        "empty(shot4)",
        "handempty(left)",
        "handempty(right)",
        "next(l0, l1)",
        "next(l1, l2)",
        "ontable(shaker1)",
        "ontable(shot1)",
        "ontable(shot2)",
        "ontable(shot3)",
        "ontable(shot4)",
        "shaker-empty-level(shaker1, l0)",
        "shaker-level(shaker1, l0)"
    ],


    "actions_sequence": [
      {
        "action_name": "leave",
        "parameters": ["right", "shot4"]
      },
      {
        "action_name": "shake",
        "parameters": ["cocktail3", "ingredient1", "shaker1", "right", "l1", "l2"]
      }
    ],


    "states_after_actions": {
      "after_action_1": [
        "clean(shaker1)",
        "clean(shot1)",
        "clean(shot2)",
        "clean(shot3)",
        "clean(shot4)",
        "cocktail-part1(cocktail1, ingredient3)",
        "cocktail-part1(cocktail2, ingredient2)",
        "cocktail-part1(cocktail3, ingredient1)",
        "cocktail-part2(cocktail1, ingredient1)",
        "cocktail-part2(cocktail2, ingredient3)",
        "cocktail-part2(cocktail3, ingredient2)",
        "dispenses(dispenser1, ingredient1)",
        "dispenses(dispenser2, ingredient2)",
        "dispenses(dispenser3, ingredient3)",
        "empty(shaker1)",
        "empty(shot1)",
        "empty(shot2)",
        "empty(shot3)",
        "empty(shot4)",
        "handempty(right)",
        "holding(left, shaker1)",
        "next(l0, l1)",
        "next(l1, l2)",
        "ontable(shot1)",
        "ontable(shot2)",
        "ontable(shot3)",
        "ontable(shot4)",
        "shaker-empty-level(shaker1, l0)",
        "shaker-level(shaker1, l0)"
      ],
      "after_action_2": [
        "clean(shaker1)",
        "clean(shot1)",
        "clean(shot2)",
        "clean(shot3)",
        "clean(shot4)",
        "cocktail-part1(cocktail1, ingredient3)",
        "cocktail-part1(cocktail2, ingredient2)",
        "cocktail-part1(cocktail3, ingredient1)",
        "cocktail-part2(cocktail1, ingredient1)",
        "cocktail-part2(cocktail2, ingredient3)",
        "cocktail-part2(cocktail3, ingredient2)",
        "contains(shaker1, cocktail3)",
        "dispenses(dispenser1, ingredient1)",
        "dispenses(dispenser2, ingredient2)",
        "dispenses(dispenser3, ingredient3)",
        "empty(shaker1)",
        "empty(shot1)",
        "empty(shot2)",
        "empty(shot3)",
        "empty(shot4)",
        "handempty(right)",
        "holding(left, shaker1)",
        "next(l0, l1)",
        "next(l1, l2)",
        "ontable(shot1)",
        "ontable(shot2)",
        "ontable(shot3)",
        "ontable(shot4)",
        "shaked(shaker1)",
        "shaker-empty-level(shaker1, l0)",
        "shaker-level(shaker1, l0)"
      ]
    }
  }
  