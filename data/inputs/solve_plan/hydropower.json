{
  "domain": "hydropower",
  "domain_file": "data/pddl/hydropower/domain_hydropower.pddl",
  "prompts": [
    {
      "instance": "p01.pddl",
      "instance_path": "data/pddl/hydropower/instances/p01.pddl",
      "prompt": "Solve this planning problem:\n\nDomain PDDL:\n```\n\n(define (domain hydropower)\n\n\n\t(:types powerstation time turnvalue)\n\n\t(:predicates\n\n\t\t(fewerturns ?n1 - turnvalue ?n2 - turnvalue)\n\t\t(timenow ?t - time)\n\t\t(before ?t1 - time ?t2 - time)\n\t\t(demand ?t - time ?n - turnvalue)\n\n\n\n\t\t(faultrepair ?t - time)\n\t\t(faultrepaired ?t - time)\n\n\n\t\t(transitive-later-than ?t1 - time ?t2 - time)\n\t)\n\n\t(:functions\n\t\t(funds)\n\t\t(stored_units)\n\t\t(stored_capacity)\n\t\t(value ?n - turnvalue)\n\t\t\n\t)\n\n\n\t(:action advance_time\n\t\t:parameters(?t1 - time ?t2 - time)\n\t\t:precondition (and\n\t\t\t(timenow ?t1)\n\t\t\t(before ?t1 ?t2)\n\t\t)\n\t\t:effect( and\n\t\t\t(timenow ?t2)\n\t\t\t(not (timenow ?t1))\n\t\t)\n\t)\n\n(:action pump_water_up\n\t\t:parameters(?t1 - time ?n1 - turnvalue)\n\t\t:precondition (and\n\t\t    (timenow ?t1)\n\t\t    (>= (funds) (* 1.05 (value ?n1)))\n\t\t    (>= (stored_capacity) 1)\n\t\t    (demand ?t1 ?n1)\n\t\t)\n\t\t:effect( and\n\t\t  (increase (stored_units) 1)\n\t\t  (decrease (stored_capacity) 1)\n\t\t  (decrease (funds) (* 1.05 (value ?n1)))\n\t\t)\n)\n\n(:action generate\n\t\t:parameters(?t1 - time ?n1 - turnvalue)\n\t\t:precondition (and\n\t\t    (timenow ?t1)\n\t\t    (>= (stored_units) 1)\n\t\t    (demand ?t1 ?n1)\n\t\t)\n\t\t:effect( and\n\t\t  (decrease (stored_units) 1)\n\t\t  (increase (stored_capacity) 1)\n\t\t  (increase (funds) (value ?n1))\n\t\t)\n)\n\n\n\n)\n\n```\n\nTask PDDL:\n```\n(define (problem power1)\n  (:domain hydropower)\n  (:objects\n\t  n0 n1 n2 n3 n4 n5 n6 n7 n8 n9 n10 n11 n12 n13 n14 n15 n16 n17 n18 n19 n20 n21 n22 n23 n24 n25 n26 - turnvalue\n\t  \n\t  t0000 t0030 t0100 t0130 t0200 t0230 t0300 t0330 t0400 t0430 t0500 t0530 t0600 t0630 t0700 t0730 t0800 t0830 t0900 t0930 t1000 t1030 t1100 t1130 t1200 t1230 t1300 t1330 t1400 t1430 t1500 t1530 t1600 t1630 t1700 t1730 t1800 t1830 t1900 t1930 t2000 t2030 t2100 t2130 t2200 t2230 t2300 t2330 t2400 t2430 t2500 - time\n)\n(:init\n\t  (= (value n0) 0)\n\t  (= (value n1) 1)\n\t  (= (value n2) 2)\n\t  (= (value n3) 3)\n\t  (= (value n4) 4)\n\t  (= (value n5) 5)\n\t  (= (value n6) 6)\n\t  (= (value n7) 7)\n\t  (= (value n8) 8)\n\t  (= (value n9) 9)\n\t  (= (value n10) 10)\n\t  (= (value n11) 11)\n\t  (= (value n12) 12)\n\t  (= (value n13) 13)\n\t  (= (value n14) 14)\n\t  (= (value n15) 15)\n\t  (= (value n16) 16)\n\t  (= (value n17) 17)\n\t  (= (value n18) 18)\n\t  (= (value n19) 19)\n\t  (= (value n20) 20)\n\t  (= (value n21) 21)\n\t  (= (value n22) 22)\n\t  (= (value n23) 23)\n\t  (= (value n24) 24)\n\t  (= (value n25) 25)\n\t  (= (value n26) 26)\n\n\n\n\t(demand t0000 n7)\n        (demand t0030 n7)\n        (demand t0100 n7)\n        (demand t0130 n6)\n        (demand t0200 n6)\n        (demand t0230 n6)\n        (demand t0300 n5)\n        (demand t0330 n4)\n        (demand t0400 n3)\n        (demand t0430 n3)\n        (demand t0500 n4)\n        (demand t0530 n5)\n        (demand t0600 n9)\n        (demand t0630 n13)\n        (demand t0700 n18)\n        (demand t0730 n19)\n        (demand t0800 n19)\n        (demand t0830 n19)\n        (demand t0900 n19)\n        (demand t0930 n19)\n        (demand t1000 n19)\n        (demand t1030 n19)\n        (demand t1100 n19)\n        (demand t1130 n19)\n        (demand t1200 n19)\n        (demand t1230 n18)\n        (demand t1300 n18)\n        (demand t1330 n18)\n        (demand t1400 n18)\n        (demand t1430 n18)\n        (demand t1500 n19)\n        (demand t1530 n20)\n        (demand t1600 n23)\n        (demand t1630 n25)\n        (demand t1700 n26)\n        (demand t1730 n25)\n        (demand t1800 n24)\n        (demand t1830 n22)\n        (demand t1900 n21)\n        (demand t1930 n20)\n        (demand t2000 n19)\n        (demand t2030 n18)\n        (demand t2100 n16)\n        (demand t2130 n14)\n        (demand t2200 n12)\n        (demand t2230 n10)\n        (demand t2300 n6)\n        (demand t2330 n3)\n        (demand t2400 n1)\n        (demand t2430 n1)\n        (demand t2500 n1)\n\n\t(timenow t0000)\n\n        (before t0000 t0030)\n        (before t0030 t0100)\n        (before t0100 t0130)\n        (before t0130 t0200)\n        (before t0200 t0230)\n        (before t0230 t0300)\n        (before t0300 t0330)\n        (before t0330 t0400)\n        (before t0400 t0430)\n        (before t0430 t0500)\n        (before t0500 t0530)\n        (before t0530 t0600)\n        (before t0600 t0630)\n        (before t0630 t0700)\n        (before t0700 t0730)\n        (before t0730 t0800)\n        (before t0800 t0830)\n        (before t0830 t0900)\n        (before t0900 t0930)\n        (before t0930 t1000)\n        (before t1000 t1030)\n        (before t1030 t1100)\n        (before t1100 t1130)\n        (before t1130 t1200)\n        (before t1200 t1230)\n        (before t1230 t1300)\n        (before t1300 t1330)\n        (before t1330 t1400)\n        (before t1400 t1430)\n        (before t1430 t1500)\n        (before t1500 t1530)\n        (before t1530 t1600)\n        (before t1600 t1630)\n        (before t1630 t1700)\n        (before t1700 t1730)\n        (before t1730 t1800)\n        (before t1800 t1830)\n        (before t1830 t1900)\n        (before t1900 t1930)\n        (before t1930 t2000)\n        (before t2000 t2030)\n        (before t2030 t2100)\n        (before t2100 t2130)\n        (before t2130 t2200)\n        (before t2200 t2230)\n        (before t2230 t2300)\n        (before t2300 t2330)\n        (before t2330 t2400)\n\n\t(= (stored_units) 0)\n\t(= (stored_capacity) 3)\n\t(= (funds) 1000)\n)\n\t (:goal (and\n\t (>= (funds) 1060)\n\t)\n)\n)\n```\n\nReason step by step and return the optimal answer enclosed within $$ markers in json format.Represent all the new line with \n, so the json could be correctly read. The json should include 'reason' explaining your solution and 'plan' containing the PDDL format plan. The plan should only include the sequence of actions.\n\nYour response should look exactly like this:\n$$\n{\n    \"reason\": \"your step by step reasoning here: \n...\n\",\n    \"plan\": \"(action1)\\n(action2)\\n(action3)...\"\n}\n$$\n\nMake sure your response follows this format exactly, with $$ markers at the beginning and end."
    },
    {
      "instance": "p02.pddl",
      "instance_path": "data/pddl/hydropower/instances/p02.pddl",
      "prompt": "Solve this planning problem:\n\nDomain PDDL:\n```\n\n(define (domain hydropower)\n\n\n\t(:types powerstation time turnvalue)\n\n\t(:predicates\n\n\t\t(fewerturns ?n1 - turnvalue ?n2 - turnvalue)\n\t\t(timenow ?t - time)\n\t\t(before ?t1 - time ?t2 - time)\n\t\t(demand ?t - time ?n - turnvalue)\n\n\n\n\t\t(faultrepair ?t - time)\n\t\t(faultrepaired ?t - time)\n\n\n\t\t(transitive-later-than ?t1 - time ?t2 - time)\n\t)\n\n\t(:functions\n\t\t(funds)\n\t\t(stored_units)\n\t\t(stored_capacity)\n\t\t(value ?n - turnvalue)\n\t\t\n\t)\n\n\n\t(:action advance_time\n\t\t:parameters(?t1 - time ?t2 - time)\n\t\t:precondition (and\n\t\t\t(timenow ?t1)\n\t\t\t(before ?t1 ?t2)\n\t\t)\n\t\t:effect( and\n\t\t\t(timenow ?t2)\n\t\t\t(not (timenow ?t1))\n\t\t)\n\t)\n\n(:action pump_water_up\n\t\t:parameters(?t1 - time ?n1 - turnvalue)\n\t\t:precondition (and\n\t\t    (timenow ?t1)\n\t\t    (>= (funds) (* 1.05 (value ?n1)))\n\t\t    (>= (stored_capacity) 1)\n\t\t    (demand ?t1 ?n1)\n\t\t)\n\t\t:effect( and\n\t\t  (increase (stored_units) 1)\n\t\t  (decrease (stored_capacity) 1)\n\t\t  (decrease (funds) (* 1.05 (value ?n1)))\n\t\t)\n)\n\n(:action generate\n\t\t:parameters(?t1 - time ?n1 - turnvalue)\n\t\t:precondition (and\n\t\t    (timenow ?t1)\n\t\t    (>= (stored_units) 1)\n\t\t    (demand ?t1 ?n1)\n\t\t)\n\t\t:effect( and\n\t\t  (decrease (stored_units) 1)\n\t\t  (increase (stored_capacity) 1)\n\t\t  (increase (funds) (value ?n1))\n\t\t)\n)\n\n\n\n)\n\n```\n\nTask PDDL:\n```\n(define (problem power1)\n  (:domain hydropower)\n  (:objects\n\t  n0 n1 n2 n3 n4 n5 n6 n7 n8 n9 n10 n11 n12 n13 n14 n15 n16 n17 n18 n19 n20 n21 n22 n23 n24 n25 n26 - turnvalue\n\t  \n\t  t0000 t0030 t0100 t0130 t0200 t0230 t0300 t0330 t0400 t0430 t0500 t0530 t0600 t0630 t0700 t0730 t0800 t0830 t0900 t0930 t1000 t1030 t1100 t1130 t1200 t1230 t1300 t1330 t1400 t1430 t1500 t1530 t1600 t1630 t1700 t1730 t1800 t1830 t1900 t1930 t2000 t2030 t2100 t2130 t2200 t2230 t2300 t2330 t2400 t2430 t2500 - time\n)\n(:init\n\t  (= (value n0) 0)\n\t  (= (value n1) 1)\n\t  (= (value n2) 2)\n\t  (= (value n3) 3)\n\t  (= (value n4) 4)\n\t  (= (value n5) 5)\n\t  (= (value n6) 6)\n\t  (= (value n7) 7)\n\t  (= (value n8) 8)\n\t  (= (value n9) 9)\n\t  (= (value n10) 10)\n\t  (= (value n11) 11)\n\t  (= (value n12) 12)\n\t  (= (value n13) 13)\n\t  (= (value n14) 14)\n\t  (= (value n15) 15)\n\t  (= (value n16) 16)\n\t  (= (value n17) 17)\n\t  (= (value n18) 18)\n\t  (= (value n19) 19)\n\t  (= (value n20) 20)\n\t  (= (value n21) 21)\n\t  (= (value n22) 22)\n\t  (= (value n23) 23)\n\t  (= (value n24) 24)\n\t  (= (value n25) 25)\n\t  (= (value n26) 26)\n\n\n\n\t(demand t0000 n7)\n        (demand t0030 n7)\n        (demand t0100 n7)\n        (demand t0130 n6)\n        (demand t0200 n6)\n        (demand t0230 n6)\n        (demand t0300 n5)\n        (demand t0330 n4)\n        (demand t0400 n3)\n        (demand t0430 n3)\n        (demand t0500 n4)\n        (demand t0530 n5)\n        (demand t0600 n9)\n        (demand t0630 n13)\n        (demand t0700 n18)\n        (demand t0730 n19)\n        (demand t0800 n19)\n        (demand t0830 n19)\n        (demand t0900 n19)\n        (demand t0930 n19)\n        (demand t1000 n19)\n        (demand t1030 n19)\n        (demand t1100 n19)\n        (demand t1130 n19)\n        (demand t1200 n19)\n        (demand t1230 n18)\n        (demand t1300 n18)\n        (demand t1330 n18)\n        (demand t1400 n18)\n        (demand t1430 n18)\n        (demand t1500 n19)\n        (demand t1530 n20)\n        (demand t1600 n23)\n        (demand t1630 n25)\n        (demand t1700 n26)\n        (demand t1730 n25)\n        (demand t1800 n24)\n        (demand t1830 n22)\n        (demand t1900 n21)\n        (demand t1930 n20)\n        (demand t2000 n19)\n        (demand t2030 n18)\n        (demand t2100 n16)\n        (demand t2130 n14)\n        (demand t2200 n12)\n        (demand t2230 n10)\n        (demand t2300 n6)\n        (demand t2330 n3)\n        (demand t2400 n1)\n        (demand t2430 n1)\n        (demand t2500 n1)\n\n\t(timenow t0000)\n\n        (before t0000 t0030)\n        (before t0030 t0100)\n        (before t0100 t0130)\n        (before t0130 t0200)\n        (before t0200 t0230)\n        (before t0230 t0300)\n        (before t0300 t0330)\n        (before t0330 t0400)\n        (before t0400 t0430)\n        (before t0430 t0500)\n        (before t0500 t0530)\n        (before t0530 t0600)\n        (before t0600 t0630)\n        (before t0630 t0700)\n        (before t0700 t0730)\n        (before t0730 t0800)\n        (before t0800 t0830)\n        (before t0830 t0900)\n        (before t0900 t0930)\n        (before t0930 t1000)\n        (before t1000 t1030)\n        (before t1030 t1100)\n        (before t1100 t1130)\n        (before t1130 t1200)\n        (before t1200 t1230)\n        (before t1230 t1300)\n        (before t1300 t1330)\n        (before t1330 t1400)\n        (before t1400 t1430)\n        (before t1430 t1500)\n        (before t1500 t1530)\n        (before t1530 t1600)\n        (before t1600 t1630)\n        (before t1630 t1700)\n        (before t1700 t1730)\n        (before t1730 t1800)\n        (before t1800 t1830)\n        (before t1830 t1900)\n        (before t1900 t1930)\n        (before t1930 t2000)\n        (before t2000 t2030)\n        (before t2030 t2100)\n        (before t2100 t2130)\n        (before t2130 t2200)\n        (before t2200 t2230)\n        (before t2230 t2300)\n        (before t2300 t2330)\n        (before t2330 t2400)\n\n\t(= (stored_units) 0)\n\t(= (stored_capacity) 4)\n\t(= (funds) 1000)\n)\n\t (:goal (and\n\t (>= (funds) 1070)\n\t)\n)\n)\n```\n\nReason step by step and return the optimal answer enclosed within $$ markers in json format.Represent all the new line with \n, so the json could be correctly read. The json should include 'reason' explaining your solution and 'plan' containing the PDDL format plan. The plan should only include the sequence of actions.\n\nYour response should look exactly like this:\n$$\n{\n    \"reason\": \"your step by step reasoning here: \n...\n\",\n    \"plan\": \"(action1)\\n(action2)\\n(action3)...\"\n}\n$$\n\nMake sure your response follows this format exactly, with $$ markers at the beginning and end."
    },
    {
      "instance": "p03.pddl",
      "instance_path": "data/pddl/hydropower/instances/p03.pddl",
      "prompt": "Solve this planning problem:\n\nDomain PDDL:\n```\n\n(define (domain hydropower)\n\n\n\t(:types powerstation time turnvalue)\n\n\t(:predicates\n\n\t\t(fewerturns ?n1 - turnvalue ?n2 - turnvalue)\n\t\t(timenow ?t - time)\n\t\t(before ?t1 - time ?t2 - time)\n\t\t(demand ?t - time ?n - turnvalue)\n\n\n\n\t\t(faultrepair ?t - time)\n\t\t(faultrepaired ?t - time)\n\n\n\t\t(transitive-later-than ?t1 - time ?t2 - time)\n\t)\n\n\t(:functions\n\t\t(funds)\n\t\t(stored_units)\n\t\t(stored_capacity)\n\t\t(value ?n - turnvalue)\n\t\t\n\t)\n\n\n\t(:action advance_time\n\t\t:parameters(?t1 - time ?t2 - time)\n\t\t:precondition (and\n\t\t\t(timenow ?t1)\n\t\t\t(before ?t1 ?t2)\n\t\t)\n\t\t:effect( and\n\t\t\t(timenow ?t2)\n\t\t\t(not (timenow ?t1))\n\t\t)\n\t)\n\n(:action pump_water_up\n\t\t:parameters(?t1 - time ?n1 - turnvalue)\n\t\t:precondition (and\n\t\t    (timenow ?t1)\n\t\t    (>= (funds) (* 1.05 (value ?n1)))\n\t\t    (>= (stored_capacity) 1)\n\t\t    (demand ?t1 ?n1)\n\t\t)\n\t\t:effect( and\n\t\t  (increase (stored_units) 1)\n\t\t  (decrease (stored_capacity) 1)\n\t\t  (decrease (funds) (* 1.05 (value ?n1)))\n\t\t)\n)\n\n(:action generate\n\t\t:parameters(?t1 - time ?n1 - turnvalue)\n\t\t:precondition (and\n\t\t    (timenow ?t1)\n\t\t    (>= (stored_units) 1)\n\t\t    (demand ?t1 ?n1)\n\t\t)\n\t\t:effect( and\n\t\t  (decrease (stored_units) 1)\n\t\t  (increase (stored_capacity) 1)\n\t\t  (increase (funds) (value ?n1))\n\t\t)\n)\n\n\n\n)\n\n```\n\nTask PDDL:\n```\n(define (problem power1)\n  (:domain hydropower)\n  (:objects\n\t  n0 n1 n2 n3 n4 n5 n6 n7 n8 n9 n10 n11 n12 n13 n14 n15 n16 n17 n18 n19 n20 n21 n22 n23 n24 n25 n26 - turnvalue\n\t  \n\t  t0000 t0030 t0100 t0130 t0200 t0230 t0300 t0330 t0400 t0430 t0500 t0530 t0600 t0630 t0700 t0730 t0800 t0830 t0900 t0930 t1000 t1030 t1100 t1130 t1200 t1230 t1300 t1330 t1400 t1430 t1500 t1530 t1600 t1630 t1700 t1730 t1800 t1830 t1900 t1930 t2000 t2030 t2100 t2130 t2200 t2230 t2300 t2330 t2400 t2430 t2500 - time\n)\n(:init\n\t  (= (value n0) 0)\n\t  (= (value n1) 1)\n\t  (= (value n2) 2)\n\t  (= (value n3) 3)\n\t  (= (value n4) 4)\n\t  (= (value n5) 5)\n\t  (= (value n6) 6)\n\t  (= (value n7) 7)\n\t  (= (value n8) 8)\n\t  (= (value n9) 9)\n\t  (= (value n10) 10)\n\t  (= (value n11) 11)\n\t  (= (value n12) 12)\n\t  (= (value n13) 13)\n\t  (= (value n14) 14)\n\t  (= (value n15) 15)\n\t  (= (value n16) 16)\n\t  (= (value n17) 17)\n\t  (= (value n18) 18)\n\t  (= (value n19) 19)\n\t  (= (value n20) 20)\n\t  (= (value n21) 21)\n\t  (= (value n22) 22)\n\t  (= (value n23) 23)\n\t  (= (value n24) 24)\n\t  (= (value n25) 25)\n\t  (= (value n26) 26)\n\n\n\n\t(demand t0000 n7)\n        (demand t0030 n7)\n        (demand t0100 n7)\n        (demand t0130 n6)\n        (demand t0200 n6)\n        (demand t0230 n6)\n        (demand t0300 n5)\n        (demand t0330 n4)\n        (demand t0400 n3)\n        (demand t0430 n3)\n        (demand t0500 n4)\n        (demand t0530 n5)\n        (demand t0600 n9)\n        (demand t0630 n13)\n        (demand t0700 n18)\n        (demand t0730 n19)\n        (demand t0800 n19)\n        (demand t0830 n19)\n        (demand t0900 n19)\n        (demand t0930 n19)\n        (demand t1000 n19)\n        (demand t1030 n19)\n        (demand t1100 n19)\n        (demand t1130 n19)\n        (demand t1200 n19)\n        (demand t1230 n18)\n        (demand t1300 n18)\n        (demand t1330 n18)\n        (demand t1400 n18)\n        (demand t1430 n18)\n        (demand t1500 n19)\n        (demand t1530 n20)\n        (demand t1600 n23)\n        (demand t1630 n25)\n        (demand t1700 n26)\n        (demand t1730 n25)\n        (demand t1800 n24)\n        (demand t1830 n22)\n        (demand t1900 n21)\n        (demand t1930 n20)\n        (demand t2000 n19)\n        (demand t2030 n18)\n        (demand t2100 n16)\n        (demand t2130 n14)\n        (demand t2200 n12)\n        (demand t2230 n10)\n        (demand t2300 n6)\n        (demand t2330 n3)\n        (demand t2400 n1)\n        (demand t2430 n1)\n        (demand t2500 n1)\n\n\t(timenow t0000)\n\n        (before t0000 t0030)\n        (before t0030 t0100)\n        (before t0100 t0130)\n        (before t0130 t0200)\n        (before t0200 t0230)\n        (before t0230 t0300)\n        (before t0300 t0330)\n        (before t0330 t0400)\n        (before t0400 t0430)\n        (before t0430 t0500)\n        (before t0500 t0530)\n        (before t0530 t0600)\n        (before t0600 t0630)\n        (before t0630 t0700)\n        (before t0700 t0730)\n        (before t0730 t0800)\n        (before t0800 t0830)\n        (before t0830 t0900)\n        (before t0900 t0930)\n        (before t0930 t1000)\n        (before t1000 t1030)\n        (before t1030 t1100)\n        (before t1100 t1130)\n        (before t1130 t1200)\n        (before t1200 t1230)\n        (before t1230 t1300)\n        (before t1300 t1330)\n        (before t1330 t1400)\n        (before t1400 t1430)\n        (before t1430 t1500)\n        (before t1500 t1530)\n        (before t1530 t1600)\n        (before t1600 t1630)\n        (before t1630 t1700)\n        (before t1700 t1730)\n        (before t1730 t1800)\n        (before t1800 t1830)\n        (before t1830 t1900)\n        (before t1900 t1930)\n        (before t1930 t2000)\n        (before t2000 t2030)\n        (before t2030 t2100)\n        (before t2100 t2130)\n        (before t2130 t2200)\n        (before t2200 t2230)\n        (before t2230 t2300)\n        (before t2300 t2330)\n        (before t2330 t2400)\n\n\t(= (stored_units) 0)\n\t(= (stored_capacity) 1)\n\t(= (funds) 1000)\n)\n\t (:goal (and\n\t (>= (funds) 1010)\n\t)\n)\n)\n```\n\nReason step by step and return the optimal answer enclosed within $$ markers in json format.Represent all the new line with \n, so the json could be correctly read. The json should include 'reason' explaining your solution and 'plan' containing the PDDL format plan. The plan should only include the sequence of actions.\n\nYour response should look exactly like this:\n$$\n{\n    \"reason\": \"your step by step reasoning here: \n...\n\",\n    \"plan\": \"(action1)\\n(action2)\\n(action3)...\"\n}\n$$\n\nMake sure your response follows this format exactly, with $$ markers at the beginning and end."
    },
    {
      "instance": "p04.pddl",
      "instance_path": "data/pddl/hydropower/instances/p04.pddl",
      "prompt": "Solve this planning problem:\n\nDomain PDDL:\n```\n\n(define (domain hydropower)\n\n\n\t(:types powerstation time turnvalue)\n\n\t(:predicates\n\n\t\t(fewerturns ?n1 - turnvalue ?n2 - turnvalue)\n\t\t(timenow ?t - time)\n\t\t(before ?t1 - time ?t2 - time)\n\t\t(demand ?t - time ?n - turnvalue)\n\n\n\n\t\t(faultrepair ?t - time)\n\t\t(faultrepaired ?t - time)\n\n\n\t\t(transitive-later-than ?t1 - time ?t2 - time)\n\t)\n\n\t(:functions\n\t\t(funds)\n\t\t(stored_units)\n\t\t(stored_capacity)\n\t\t(value ?n - turnvalue)\n\t\t\n\t)\n\n\n\t(:action advance_time\n\t\t:parameters(?t1 - time ?t2 - time)\n\t\t:precondition (and\n\t\t\t(timenow ?t1)\n\t\t\t(before ?t1 ?t2)\n\t\t)\n\t\t:effect( and\n\t\t\t(timenow ?t2)\n\t\t\t(not (timenow ?t1))\n\t\t)\n\t)\n\n(:action pump_water_up\n\t\t:parameters(?t1 - time ?n1 - turnvalue)\n\t\t:precondition (and\n\t\t    (timenow ?t1)\n\t\t    (>= (funds) (* 1.05 (value ?n1)))\n\t\t    (>= (stored_capacity) 1)\n\t\t    (demand ?t1 ?n1)\n\t\t)\n\t\t:effect( and\n\t\t  (increase (stored_units) 1)\n\t\t  (decrease (stored_capacity) 1)\n\t\t  (decrease (funds) (* 1.05 (value ?n1)))\n\t\t)\n)\n\n(:action generate\n\t\t:parameters(?t1 - time ?n1 - turnvalue)\n\t\t:precondition (and\n\t\t    (timenow ?t1)\n\t\t    (>= (stored_units) 1)\n\t\t    (demand ?t1 ?n1)\n\t\t)\n\t\t:effect( and\n\t\t  (decrease (stored_units) 1)\n\t\t  (increase (stored_capacity) 1)\n\t\t  (increase (funds) (value ?n1))\n\t\t)\n)\n\n\n\n)\n\n```\n\nTask PDDL:\n```\n(define (problem power1)\n  (:domain hydropower)\n  (:objects\n\t  n0 n1 n2 n3 n4 n5 n6 n7 n8 n9 n10 n11 n12 n13 n14 n15 n16 n17 n18 n19 n20 n21 n22 n23 n24 n25 n26 - turnvalue\n\t  \n\t  t0000 t0030 t0100 t0130 t0200 t0230 t0300 t0330 t0400 t0430 t0500 t0530 t0600 t0630 t0700 t0730 t0800 t0830 t0900 t0930 t1000 t1030 t1100 t1130 t1200 t1230 t1300 t1330 t1400 t1430 t1500 t1530 t1600 t1630 t1700 t1730 t1800 t1830 t1900 t1930 t2000 t2030 t2100 t2130 t2200 t2230 t2300 t2330 t2400 t2430 t2500 - time\n)\n(:init\n\t  (= (value n0) 0)\n\t  (= (value n1) 1)\n\t  (= (value n2) 2)\n\t  (= (value n3) 3)\n\t  (= (value n4) 4)\n\t  (= (value n5) 5)\n\t  (= (value n6) 6)\n\t  (= (value n7) 7)\n\t  (= (value n8) 8)\n\t  (= (value n9) 9)\n\t  (= (value n10) 10)\n\t  (= (value n11) 11)\n\t  (= (value n12) 12)\n\t  (= (value n13) 13)\n\t  (= (value n14) 14)\n\t  (= (value n15) 15)\n\t  (= (value n16) 16)\n\t  (= (value n17) 17)\n\t  (= (value n18) 18)\n\t  (= (value n19) 19)\n\t  (= (value n20) 20)\n\t  (= (value n21) 21)\n\t  (= (value n22) 22)\n\t  (= (value n23) 23)\n\t  (= (value n24) 24)\n\t  (= (value n25) 25)\n\t  (= (value n26) 26)\n\n\n\n\t(demand t0000 n7)\n        (demand t0030 n7)\n        (demand t0100 n7)\n        (demand t0130 n6)\n        (demand t0200 n6)\n        (demand t0230 n6)\n        (demand t0300 n5)\n        (demand t0330 n4)\n        (demand t0400 n3)\n        (demand t0430 n3)\n        (demand t0500 n4)\n        (demand t0530 n5)\n        (demand t0600 n9)\n        (demand t0630 n13)\n        (demand t0700 n18)\n        (demand t0730 n19)\n        (demand t0800 n19)\n        (demand t0830 n19)\n        (demand t0900 n19)\n        (demand t0930 n19)\n        (demand t1000 n19)\n        (demand t1030 n19)\n        (demand t1100 n19)\n        (demand t1130 n19)\n        (demand t1200 n19)\n        (demand t1230 n18)\n        (demand t1300 n18)\n        (demand t1330 n18)\n        (demand t1400 n18)\n        (demand t1430 n18)\n        (demand t1500 n19)\n        (demand t1530 n20)\n        (demand t1600 n23)\n        (demand t1630 n25)\n        (demand t1700 n26)\n        (demand t1730 n25)\n        (demand t1800 n24)\n        (demand t1830 n22)\n        (demand t1900 n21)\n        (demand t1930 n20)\n        (demand t2000 n19)\n        (demand t2030 n18)\n        (demand t2100 n16)\n        (demand t2130 n14)\n        (demand t2200 n12)\n        (demand t2230 n10)\n        (demand t2300 n6)\n        (demand t2330 n3)\n        (demand t2400 n1)\n        (demand t2430 n1)\n        (demand t2500 n1)\n\n\t(timenow t0000)\n\n        (before t0000 t0030)\n        (before t0030 t0100)\n        (before t0100 t0130)\n        (before t0130 t0200)\n        (before t0200 t0230)\n        (before t0230 t0300)\n        (before t0300 t0330)\n        (before t0330 t0400)\n        (before t0400 t0430)\n        (before t0430 t0500)\n        (before t0500 t0530)\n        (before t0530 t0600)\n        (before t0600 t0630)\n        (before t0630 t0700)\n        (before t0700 t0730)\n        (before t0730 t0800)\n        (before t0800 t0830)\n        (before t0830 t0900)\n        (before t0900 t0930)\n        (before t0930 t1000)\n        (before t1000 t1030)\n        (before t1030 t1100)\n        (before t1100 t1130)\n        (before t1130 t1200)\n        (before t1200 t1230)\n        (before t1230 t1300)\n        (before t1300 t1330)\n        (before t1330 t1400)\n        (before t1400 t1430)\n        (before t1430 t1500)\n        (before t1500 t1530)\n        (before t1530 t1600)\n        (before t1600 t1630)\n        (before t1630 t1700)\n        (before t1700 t1730)\n        (before t1730 t1800)\n        (before t1800 t1830)\n        (before t1830 t1900)\n        (before t1900 t1930)\n        (before t1930 t2000)\n        (before t2000 t2030)\n        (before t2030 t2100)\n        (before t2100 t2130)\n        (before t2130 t2200)\n        (before t2200 t2230)\n        (before t2230 t2300)\n        (before t2300 t2330)\n        (before t2330 t2400)\n\n\t(= (stored_units) 0)\n\t(= (stored_capacity) 1)\n\t(= (funds) 1000)\n)\n\t (:goal (and\n\t (>= (funds) 1020)\n\t)\n)\n)\n```\n\nReason step by step and return the optimal answer enclosed within $$ markers in json format.Represent all the new line with \n, so the json could be correctly read. The json should include 'reason' explaining your solution and 'plan' containing the PDDL format plan. The plan should only include the sequence of actions.\n\nYour response should look exactly like this:\n$$\n{\n    \"reason\": \"your step by step reasoning here: \n...\n\",\n    \"plan\": \"(action1)\\n(action2)\\n(action3)...\"\n}\n$$\n\nMake sure your response follows this format exactly, with $$ markers at the beginning and end."
    },
    {
      "instance": "p05.pddl",
      "instance_path": "data/pddl/hydropower/instances/p05.pddl",
      "prompt": "Solve this planning problem:\n\nDomain PDDL:\n```\n\n(define (domain hydropower)\n\n\n\t(:types powerstation time turnvalue)\n\n\t(:predicates\n\n\t\t(fewerturns ?n1 - turnvalue ?n2 - turnvalue)\n\t\t(timenow ?t - time)\n\t\t(before ?t1 - time ?t2 - time)\n\t\t(demand ?t - time ?n - turnvalue)\n\n\n\n\t\t(faultrepair ?t - time)\n\t\t(faultrepaired ?t - time)\n\n\n\t\t(transitive-later-than ?t1 - time ?t2 - time)\n\t)\n\n\t(:functions\n\t\t(funds)\n\t\t(stored_units)\n\t\t(stored_capacity)\n\t\t(value ?n - turnvalue)\n\t\t\n\t)\n\n\n\t(:action advance_time\n\t\t:parameters(?t1 - time ?t2 - time)\n\t\t:precondition (and\n\t\t\t(timenow ?t1)\n\t\t\t(before ?t1 ?t2)\n\t\t)\n\t\t:effect( and\n\t\t\t(timenow ?t2)\n\t\t\t(not (timenow ?t1))\n\t\t)\n\t)\n\n(:action pump_water_up\n\t\t:parameters(?t1 - time ?n1 - turnvalue)\n\t\t:precondition (and\n\t\t    (timenow ?t1)\n\t\t    (>= (funds) (* 1.05 (value ?n1)))\n\t\t    (>= (stored_capacity) 1)\n\t\t    (demand ?t1 ?n1)\n\t\t)\n\t\t:effect( and\n\t\t  (increase (stored_units) 1)\n\t\t  (decrease (stored_capacity) 1)\n\t\t  (decrease (funds) (* 1.05 (value ?n1)))\n\t\t)\n)\n\n(:action generate\n\t\t:parameters(?t1 - time ?n1 - turnvalue)\n\t\t:precondition (and\n\t\t    (timenow ?t1)\n\t\t    (>= (stored_units) 1)\n\t\t    (demand ?t1 ?n1)\n\t\t)\n\t\t:effect( and\n\t\t  (decrease (stored_units) 1)\n\t\t  (increase (stored_capacity) 1)\n\t\t  (increase (funds) (value ?n1))\n\t\t)\n)\n\n\n\n)\n\n```\n\nTask PDDL:\n```\n(define (problem power1)\n  (:domain hydropower)\n  (:objects\n\t  n0 n1 n2 n3 n4 n5 n6 n7 n8 n9 n10 n11 n12 n13 n14 n15 n16 n17 n18 n19 n20 n21 n22 n23 n24 n25 n26 - turnvalue\n\t  \n\t  t0000 t0030 t0100 t0130 t0200 t0230 t0300 t0330 t0400 t0430 t0500 t0530 t0600 t0630 t0700 t0730 t0800 t0830 t0900 t0930 t1000 t1030 t1100 t1130 t1200 t1230 t1300 t1330 t1400 t1430 t1500 t1530 t1600 t1630 t1700 t1730 t1800 t1830 t1900 t1930 t2000 t2030 t2100 t2130 t2200 t2230 t2300 t2330 t2400 t2430 t2500 - time\n)\n(:init\n\t  (= (value n0) 0)\n\t  (= (value n1) 1)\n\t  (= (value n2) 2)\n\t  (= (value n3) 3)\n\t  (= (value n4) 4)\n\t  (= (value n5) 5)\n\t  (= (value n6) 6)\n\t  (= (value n7) 7)\n\t  (= (value n8) 8)\n\t  (= (value n9) 9)\n\t  (= (value n10) 10)\n\t  (= (value n11) 11)\n\t  (= (value n12) 12)\n\t  (= (value n13) 13)\n\t  (= (value n14) 14)\n\t  (= (value n15) 15)\n\t  (= (value n16) 16)\n\t  (= (value n17) 17)\n\t  (= (value n18) 18)\n\t  (= (value n19) 19)\n\t  (= (value n20) 20)\n\t  (= (value n21) 21)\n\t  (= (value n22) 22)\n\t  (= (value n23) 23)\n\t  (= (value n24) 24)\n\t  (= (value n25) 25)\n\t  (= (value n26) 26)\n\n\n\n\t(demand t0000 n7)\n        (demand t0030 n7)\n        (demand t0100 n7)\n        (demand t0130 n6)\n        (demand t0200 n6)\n        (demand t0230 n6)\n        (demand t0300 n5)\n        (demand t0330 n4)\n        (demand t0400 n3)\n        (demand t0430 n3)\n        (demand t0500 n4)\n        (demand t0530 n5)\n        (demand t0600 n9)\n        (demand t0630 n13)\n        (demand t0700 n18)\n        (demand t0730 n19)\n        (demand t0800 n19)\n        (demand t0830 n19)\n        (demand t0900 n19)\n        (demand t0930 n19)\n        (demand t1000 n19)\n        (demand t1030 n19)\n        (demand t1100 n19)\n        (demand t1130 n19)\n        (demand t1200 n19)\n        (demand t1230 n18)\n        (demand t1300 n18)\n        (demand t1330 n18)\n        (demand t1400 n18)\n        (demand t1430 n18)\n        (demand t1500 n19)\n        (demand t1530 n20)\n        (demand t1600 n23)\n        (demand t1630 n25)\n        (demand t1700 n26)\n        (demand t1730 n25)\n        (demand t1800 n24)\n        (demand t1830 n22)\n        (demand t1900 n21)\n        (demand t1930 n20)\n        (demand t2000 n19)\n        (demand t2030 n18)\n        (demand t2100 n16)\n        (demand t2130 n14)\n        (demand t2200 n12)\n        (demand t2230 n10)\n        (demand t2300 n6)\n        (demand t2330 n3)\n        (demand t2400 n1)\n        (demand t2430 n1)\n        (demand t2500 n1)\n\n\t(timenow t0000)\n\n        (before t0000 t0030)\n        (before t0030 t0100)\n        (before t0100 t0130)\n        (before t0130 t0200)\n        (before t0200 t0230)\n        (before t0230 t0300)\n        (before t0300 t0330)\n        (before t0330 t0400)\n        (before t0400 t0430)\n        (before t0430 t0500)\n        (before t0500 t0530)\n        (before t0530 t0600)\n        (before t0600 t0630)\n        (before t0630 t0700)\n        (before t0700 t0730)\n        (before t0730 t0800)\n        (before t0800 t0830)\n        (before t0830 t0900)\n        (before t0900 t0930)\n        (before t0930 t1000)\n        (before t1000 t1030)\n        (before t1030 t1100)\n        (before t1100 t1130)\n        (before t1130 t1200)\n        (before t1200 t1230)\n        (before t1230 t1300)\n        (before t1300 t1330)\n        (before t1330 t1400)\n        (before t1400 t1430)\n        (before t1430 t1500)\n        (before t1500 t1530)\n        (before t1530 t1600)\n        (before t1600 t1630)\n        (before t1630 t1700)\n        (before t1700 t1730)\n        (before t1730 t1800)\n        (before t1800 t1830)\n        (before t1830 t1900)\n        (before t1900 t1930)\n        (before t1930 t2000)\n        (before t2000 t2030)\n        (before t2030 t2100)\n        (before t2100 t2130)\n        (before t2130 t2200)\n        (before t2200 t2230)\n        (before t2230 t2300)\n        (before t2300 t2330)\n        (before t2330 t2400)\n\n\t(= (stored_units) 0)\n\t(= (stored_capacity) 4)\n\t(= (funds) 1000)\n)\n\t (:goal (and\n\t (>= (funds) 1080)\n\t)\n)\n)\n```\n\nReason step by step and return the optimal answer enclosed within $$ markers in json format.Represent all the new line with \n, so the json could be correctly read. The json should include 'reason' explaining your solution and 'plan' containing the PDDL format plan. The plan should only include the sequence of actions.\n\nYour response should look exactly like this:\n$$\n{\n    \"reason\": \"your step by step reasoning here: \n...\n\",\n    \"plan\": \"(action1)\\n(action2)\\n(action3)...\"\n}\n$$\n\nMake sure your response follows this format exactly, with $$ markers at the beginning and end."
    }
  ]
}